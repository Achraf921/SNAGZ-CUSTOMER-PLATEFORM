const a=()=>{console.log("🧹 SECURITY: Clearing all authentication data"),["userInfo","userId","token","userRole","userEmail","hasCompletedWelcomeForm","isFirstLogin"].forEach(o=>{localStorage.getItem(o)&&(console.log(`🗑️ Clearing localStorage: ${o}`),localStorage.removeItem(o))}),["userInfo","userId","token","userRole","userEmail","hasCompletedWelcomeForm","isFirstLogin"].forEach(o=>{sessionStorage.getItem(o)&&(console.log(`🗑️ Clearing sessionStorage: ${o}`),sessionStorage.removeItem(o))}),console.log("✅ SECURITY: All authentication data cleared")},t=e=>{if(console.log("🔒 SECURITY: Securely storing user data"),!e.sub||!e.email)throw console.error("🚨 SECURITY: Cannot store invalid userInfo (missing sub/email)"),new Error("Invalid user data: missing required fields");a();const s={sub:e.sub,email:e.email,username:e.username,name:e.name||"",userId:e.sub,timestamp:new Date().toISOString()};console.log("💾 SECURITY: Storing sanitized user data:",{sub:s.sub,email:s.email,username:s.username}),localStorage.setItem("userInfo",JSON.stringify(s)),sessionStorage.setItem("userInfo",JSON.stringify(s)),localStorage.setItem("userId",s.sub),sessionStorage.setItem("userId",s.sub),console.log("✅ SECURITY: User data stored securely")};export{a as clearAllAuthData,t as secureStoreUserData};
